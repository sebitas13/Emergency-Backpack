/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Articulo;
import Modelo.Mochila;
import Enumerado.TipoArticulo;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sistema.Configuracion;

/**
 *
 * @author USUARIO
 */
public class FrameIntCaja extends javax.swing.JInternalFrame {

    ArrayList<Articulo> articulosE = new ArrayList<Articulo>();
    Articulo articuloG;
    Mochila m_base = null;
    Mochila m_opt = null;
    int pesoMaximo = 15;
    int peso = 0;
    int valorTotal = 0;
    int cantidad = 0;
    
    public FrameIntCaja() {
        initComponents();
        this.botones(false);// no necesario?
        this.ingresarPesoMaximo();
        this.cargarComboBox();
        cboBoxCategorias.setSelectedIndex(0); //seleccionado el cbox higiene por defecto
        cargarInformacion(); 
        this.reiniciar();

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMochila = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        cboBoxCategorias = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaArticulos = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaArticulosElegidos = new javax.swing.JTable();
        btnRetirar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaResultado = new javax.swing.JTextArea();
        lblPeso = new javax.swing.JLabel();
        lblPesoAcumulado = new javax.swing.JLabel();
        lblNumArticulos = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblProducto2 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(982, 702));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(984, 704));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaMochila.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "CATEGORIA", "PESO", "VALOR"
            }
        ));
        jScrollPane1.setViewportView(tablaMochila);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, 390, 160));

        btnAgregar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 102, 0));
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 90, -1));

        cboBoxCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBoxCategoriasActionPerformed(evt);
            }
        });
        getContentPane().add(cboBoxCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 200, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("LISTA DE ARTICULOS ELEGIDOS");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 280, 20));

        tablaArticulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaArticulos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaArticulosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaArticulos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 410, 170));

        tablaArticulosElegidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "CATEGORIA", "PESO", "VALOR"
            }
        ));
        tablaArticulosElegidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaArticulosElegidosKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablaArticulosElegidos);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, 420, 300));

        btnRetirar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRetirar.setForeground(new java.awt.Color(255, 102, 0));
        btnRetirar.setText("RETIRAR");
        btnRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRetirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 370, -1, 20));

        btnCalcular.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCalcular.setForeground(new java.awt.Color(255, 102, 0));
        btnCalcular.setText("CALCULAR");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });
        getContentPane().add(btnCalcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 420, -1, -1));

        txtAreaResultado.setColumns(20);
        txtAreaResultado.setRows(5);
        jScrollPane4.setViewportView(txtAreaResultado);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 460, 200, 140));

        lblPeso.setBackground(new java.awt.Color(204, 255, 204));
        lblPeso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPeso.setText("0");
        getContentPane().add(lblPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 370, 100, 20));

        lblPesoAcumulado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPesoAcumulado.setText("0");
        getContentPane().add(lblPesoAcumulado, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 120, 20));

        lblNumArticulos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNumArticulos.setText("0");
        getContentPane().add(lblNumArticulos, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 370, 100, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setText("CATEGORIA");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 130, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("CAJA OPTIMIZADA");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, 220, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setText("LISTA DE ARTICULOS NECESARIOS");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 240, 20));
        getContentPane().add(lblProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 300, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboBoxCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBoxCategoriasActionPerformed
      

        this.cargarTablaArticulos();
        this.cargarImagen(String.valueOf(this.cboBoxCategorias.getSelectedItem()));
        
    }//GEN-LAST:event_cboBoxCategoriasActionPerformed


    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    
       this.agregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarActionPerformed
      
       this.retirar();

    }//GEN-LAST:event_btnRetirarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
       

        this.calcular();


    }//GEN-LAST:event_btnCalcularActionPerformed

    private void tablaArticulosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaArticulosKeyPressed
   
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

          
            this.agregar();
        }
        

    }//GEN-LAST:event_tablaArticulosKeyPressed

    private void tablaArticulosElegidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaArticulosElegidosKeyPressed
       

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                this.retirar();

        }

    }//GEN-LAST:event_tablaArticulosElegidosKeyPressed

    private void agregar(){
          String id;
        int columna = 0;
        int fila;

        try {

            fila = this.tablaArticulos.getSelectedRow();
            id = (String) this.tablaArticulos.getValueAt(fila, columna);

      
            articuloG = Configuracion.listaArticulosNecesarios.obtenerArticulo(id);
            
            if (articulosE.add(articuloG)) {
               // System.out.println("SE AGREGO " + articulosE.size());
                peso += articuloG.getPeso();
                this.cantidad++;
                articuloG.setElegigo(true);
            }
            
            cargarTablaArticulosElegidos();
            cargarInformacion();
             this.cargarTablaArticulos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void retirar(){
         try {

            int fila = -1;
            int columna = 0;
         
            String id;
           
            Articulo articulo=null;

            fila = this.tablaArticulosElegidos.getSelectedRow();

          
             id = (String) this.tablaArticulosElegidos.getValueAt(fila, columna);
       
            System.out.println("ID: "+id);
            for(Articulo e : articulosE){
                if(id.equalsIgnoreCase(e.getID())){
                    articulo = e;
                    System.out.println("encontrado: "+e.getID());
                    break;
                }
            }
         

            if (articulo != null) {  

                int confirmado = JOptionPane.showConfirmDialog(this, "¿seguro?");

                if (JOptionPane.OK_OPTION == confirmado) {
                    articulo.setElegigo(false);
                 //   articulosE.remove(posicion);
                    articulosE.remove(articulo);
                    peso -= articulo.getPeso();
                    this.cantidad--;
                   
                    JOptionPane.showMessageDialog(this, "RETIRADO");

                }

            } else {
                JOptionPane.showMessageDialog(this, "articulo no encontrado");
            }

            this.cargarTablaArticulosElegidos();
             cargarInformacion();
             this.cargarTablaArticulos();
        } catch (IndexOutOfBoundsException p) {
            JOptionPane.showMessageDialog(this, "ElEMENTO NO SELECCIONADO: " + p);
        }
        
    }
    
    private void calcular(){
        Articulo elementos[] = new Articulo[this.articulosE.size()];
        int i = 0;
        for (Articulo e : this.articulosE) {

            elementos[i] = new Articulo(e.getID(), e.getPeso(), e.getValor(), e.getNombre(), e.getCodCat(),e.getCodTipo());;
            i++;
        }

        m_base = new Mochila(this.pesoMaximo);
        m_opt = new Mochila(this.pesoMaximo);
        Mochila.llenarMochila(m_base, elementos, false, m_opt);

      //  System.out.println(m_opt);

        this.cargarTablaOptimizada();
        this.limpiarTxtArea();
        this.mostrarTxtArea();
        
    }
    
    
    
    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
     
        if(this.peso<this.pesoMaximo){
            this.btnCalcular.setEnabled(false);
        }else{
            this.btnCalcular.setEnabled(true);
        }
        
    }//GEN-LAST:event_formMouseMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnRetirar;
    private javax.swing.JComboBox<String> cboBoxCategorias;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblNumArticulos;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JLabel lblPesoAcumulado;
    private javax.swing.JLabel lblProducto2;
    private javax.swing.JTable tablaArticulos;
    private javax.swing.JTable tablaArticulosElegidos;
    private javax.swing.JTable tablaMochila;
    private javax.swing.JTextArea txtAreaResultado;
    // End of variables declaration//GEN-END:variables

    private void cargarTablaArticulos() {
        String elegido = ((TipoArticulo) this.cboBoxCategorias.getSelectedItem()).getID();
        try {

            DefaultTableModel tabla = new DefaultTableModel(Configuracion.listaArticulosNecesarios.getMatrizProductoPorCategoria(elegido),
                    Configuracion.listaArticulosNecesarios.getTituloProducto());
            this.tablaArticulos.setModel(tabla);
            
            dimensionFilas(tablaArticulos);
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " + e);
        }

    }

    private void cargarTablaArticulosElegidos() {

        try {

            DefaultTableModel tabla2 = new DefaultTableModel(getMatrizArticulosElegidos(),
                    articulosElegidosCabeza());
            this.tablaArticulosElegidos.setModel(tabla2);
            dimensionFilas(tablaArticulosElegidos);
             

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR: " + e);
        }
    }

    private void cargarTablaOptimizada() {

        DefaultTableModel tabla3 = new DefaultTableModel(this.m_opt.getArticulos().getMatrizArticulos(),
                this.m_opt.getArticulos().getTituloProducto());

        this.tablaMochila.setModel(tabla3);
        this.tablaMochila.getColumnModel().getColumn(0).setPreferredWidth(5);
            dimensionFilas(tablaMochila);
    }

    private void cargarComboBox() {

        DefaultComboBoxModel combo = new DefaultComboBoxModel();

        DefaultComboBoxModel comboD = new DefaultComboBoxModel(TipoArticulo.values());
        this.cboBoxCategorias.setModel(comboD);

    }

    public String[][] getMatrizArticulosElegidos() {

        String[][] result = new String[this.articulosE.size()][5];
        int i = 0;
        for (Articulo e : articulosE) {
            if (articulosE.get(i) != null) {
            
                result[i][0] = e.getID();
                result[i][1] = e.getNombre();
                result[i][2] = e.getCodCat();
                result[i][3] = String.valueOf(e.getPeso());
                result[i][4] = String.valueOf(e.getValor());
                i++;
            }

        }

        return result;
    }

    public String[] articulosElegidosCabeza() {
        String[] retorno = null;

        String[] result = new String[5];
       
        result[0] = "ID";
        result[1] = "NOMBRE";
        result[2] = "CATEGORIA";
        result[3] = "PESO";
        result[4] = "VALOR";

        retorno = result;

        return retorno;

    }

    private void mostrarTxtArea() {
        try {

            this.txtAreaResultado.append(this.m_opt.toString());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e);
        }

    }

    private void limpiarTxtArea() {

        this.txtAreaResultado.setText("");
    }

    private void  cargarInformacion(){
        
        this.lblPeso.setText("Peso Max: "+this.pesoMaximo);
        this.lblPesoAcumulado.setText("P.Acumulado: "+this.peso);
        this.lblNumArticulos.setText("N.Articulos: "+this.cantidad);
    }
    
     private void cargarImagen(String cat){
         
        if(cat.equalsIgnoreCase("HIGIENE")){
            lblProducto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nhigiene.jpg"))); // NOI18N
        getContentPane().add(lblProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20,320,300,270));
        }else if(cat.equalsIgnoreCase("ABRIGO")){
           lblProducto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nropa.jpg"))); // NOI18N
        getContentPane().add(lblProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20,320,300,270)); 
        }else if(cat.equalsIgnoreCase("ALIMENTO")){
            lblProducto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nalimentos.jpg"))); // NOI18N
        getContentPane().add(lblProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20,320,300,270));
        }else{
            lblProducto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ndiversos.jpg"))); // NOI18N
        getContentPane().add(lblProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20,320,300,270));
        }
          
          
        
          
        
        
    }
    
    private void reiniciar(){
        
        Configuracion.listaArticulosNecesarios.articulosDisponibles();
        
    }
    
    private void ingresarPesoMaximo(){
        int peso=15;
         
        try {
            do{
              
           peso = Integer.parseInt(JOptionPane.showInputDialog(null, "INGRESE EL  PESO MAXIMO DE LA CAJA"));
               
            }while(peso<9 || peso>20); 
        } catch (Exception e) {
            
            System.out.println("ERROR: "+e);
            
        }
        
       this.pesoMaximo= peso;
       this.botones(true);
    }
    
    private void botones(boolean e){
         this.btnAgregar.setEnabled(e);
       this.btnCalcular.setEnabled(e);
       this.btnRetirar.setEnabled(e);
       this.tablaArticulos.setEnabled(e);
       this.tablaArticulosElegidos.setEnabled(e);
    }
    
    private void dimensionFilas(JTable tabla){
         tabla.getColumnModel().getColumn(0).setPreferredWidth(5);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(70);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(70);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(5);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(5);
    }
    
    
    
}
